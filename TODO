TODO, things that can probably be done as is.

Add constants.
  Do you know what %Key_Press<275> is?  I bet you'd know if it was
  %Key_Press{SDLK_RIGHT} instead.

Add more event types.
  Include parametric events like collisions, which will require a bit more
  coding.  Include a move event that is automatically called on
  Gamebase::Sprites.  Also, the current event system could probable be
  optimized a little better.  Perhaps we should split a Gamebase::Object
  class back off of Gamebase::Sprite that doesn't have step and move events.

Add a bunch of object utiliy functions.
  In particular, object-finding functions such as:
    nearest(Class), colliding_point(x, y), colliding_rect(x, y, w, h), etc.

Add something like a Gamebase::Room class.
  Many games have something analagous to rooms, or at least collections of
  objects that are loaded and unloaded together.  Another purpose of this is for
  objects to have room-based coordinates instead of screen-based coordinates,
  so that we can move the view around without finkling with all the object
  positions.  A Gamebase::View class might emerge from this.

Document everything!

Create more game examples.
  Preferably something that causes inspiration to work on the engine, or even
  on Rakudo.  Or just make something that's actually fun. :)

Think up a better name than Gamebase.
  I'd like something both generic-sounding and individual-sounding.  This may be
  impossible, but it's worth a try, isn't it?
  Ideas so far:
  PIE (Perl Interactive Entertainment)
  PAGE (Perl-Actualized Game Engine)
  and SixShooter.


